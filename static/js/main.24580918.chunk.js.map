{"version":3,"sources":["accessToken.ts","generated/graphql.tsx","Auth.ts","pages/EditAccount.tsx","pages/Register.tsx","pages/Home.tsx","index.tsx","App.tsx"],"names":["accessToken","setAccessToken","s","getAccessToken","DeleteUserDocument","gql","EditAccountDocument","LoginDocument","RegisterDocument","UsersDocument","checkIfAuth","token","exp","jwtDecode","Date","now","EditAccount","baseOptions","props","first_name","setFirstName","last_name","setLastName","password","setPassword","age","setAge","phone_number","setPhoneNumber","ApolloReactHooks","editAccount","style","marginBottom","marginLeft","className","aria-hidden","onClick","localStorage","removeItem","window","location","reload","logout","width","document","getElementById","transform","onFocus","onBlur","value","onChange","e","target","id","a","tmp","userId","variables","resetInputs","arr","i","length","color","borderBottom","runInputValdation","innerHTML","Register","setRegister","register","textAlign","preventDefault","res","data","successful","error","Home","useState","loading","registerState","useLoginMutation","LOGIN","useDeleteUserMutation","DELETE_USER","useEffect","login","response","setItem","refreshToken","users","map","val","key","UserDataInputs","display","type","cache","InMemoryCache","URI","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","setContext","headers","authorization","subscribe","next","bind","complete","catch","unsubscribe","client","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","fetchAccessToken","fetch","method","credentials","handleFetch","handleError","err","console","warn","onError","graphQLErrors","networkError","log","HttpLink","uri","ReactDOM","render","setLoading","getItem","json","backgroundColor","version","xmlns","in","result","stdDeviation","mode","values"],"mappings":"2MAAIA,EAAc,GAELC,EAAiB,SAACC,GAC7BF,EAAcE,GAGHC,EAAiB,WAC5B,OAAOH,G,83CC2IF,IAAMI,EAAqBC,IAAH,KAaxB,IAAMC,EAAsBD,IAAH,KAazB,IAAME,EAAgBF,IAAH,KAgBnB,IAAMG,EAAmBH,IAAH,KAgBtB,IAAMI,EAAgBJ,IAAH,K,2BCzMbK,EAAc,WACvB,IAAMC,EAAQR,IAEd,IAAKQ,EACD,OAAO,EAGX,IAAK,IACOC,EAAQC,IAAUF,GAAlBC,IACR,QAAIE,KAAKC,OAAe,IAANH,GAKpB,SACE,OAAO,IC0IAI,EAtJK,SAAC,GAAoB,IFgKEC,EEhKpBC,EAAiB,EAAjBA,MAEfC,EAUAD,EAVAC,WACAC,EASAF,EATAE,aACAC,EAQAH,EARAG,UACAC,EAOAJ,EAPAI,YACAC,EAMAL,EANAK,SACAC,EAKAN,EALAM,YACAC,EAIAP,EAJAO,IACAC,EAGAR,EAHAQ,OACAC,EAEAT,EAFAS,aACAC,EACAV,EADAU,eAXgC,EFiK3BC,IAAgFvB,EAAqBW,GEnJvGa,EAd6B,oBAwBpC,OACI,oCACI,wBAAIC,MAAO,CAAEC,aAAc,SAA3B,oBAEI,uBACID,MAAO,CAAEE,WAAY,QACrBC,UAAU,iBACVC,cAAY,OACZC,QAAS,kBAhBV,WACX,IACInC,EAAe,KACfoC,aAAaC,WAAW,OACxBC,OAAOC,SAASC,SAClB,WAWyBC,OAIvB,yBAAKR,UAAU,UACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CACIhB,MAAO,CACHC,aACAC,eACAC,YACAC,cACAC,WACAC,iBAGR,yBACIU,UAAU,YACVH,MAAO,CACHY,MAAO,MACPV,WAAY,OAGhB,2BACIG,QAAS,WACL,IACIQ,SAASC,eACL,aACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,aACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACCvB,IACDmB,SAASC,eACL,aACDd,MAAMe,UAAY,KAG7BG,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIzB,EAAOyB,EAAEC,OAAOH,UAEnC,2BAAOI,GAAG,aAAV,QAEJ,yBACInB,UAAU,YACVH,MAAO,CACHY,MAAO,MACPV,WAAY,OAGhB,2BACIG,QAAS,WACL,IACIQ,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACCrB,IACDiB,SAASC,eACL,YACDd,MAAMe,UAAY,KAG7BG,MAAOtB,EACPuB,SAAU,SAAAC,GAAC,OAAIvB,EAAeuB,EAAEC,OAAOH,UAE3C,2BAAOI,GAAG,YAAV,mBAIZ,yBAAKnB,UAAU,UACX,4BACIA,UAAU,YACVE,QAAO,sBAAE,gCAAAkB,EAAA,6DACC3C,EAAQR,OAGNoD,EAAM1C,IAAUF,GACpB6C,EAASD,EAAIC,QALZ,SAQC1B,EAAY,CACd2B,UAAW,CACPhC,MACAN,aACAE,YACAE,WACAI,eACA6B,YAfH,OAmBLjB,OAAOC,SAASC,SAnBX,4CAFb,aCkDViB,EAAc,SAACC,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAC5B,IACIhB,SAASC,eAAT,UAA2Bc,EAAIC,GAA/B,WAA4C7B,MAAM+B,MAAQ,QAE1DlB,SAASC,eAAT,UAA2Bc,EAAIC,GAA/B,WAA4C7B,MAAMgC,aAC9C,kBACN,YAIJC,EAAoB,SAAC9C,GAAgB,IACjCC,EAAkDD,EAAlDC,WAAYE,EAAsCH,EAAtCG,UAAWE,EAA2BL,EAA3BK,SAAUI,EAAiBT,EAAjBS,aACvC,IAAKR,IAAeE,IAAcE,IAAaI,EAAc,CACzD,IAAKR,EACD,IACIyB,SAASC,eAAe,YAAad,MAAM+B,MAAQ,MAEnDlB,SAASC,eAAe,YAAad,MAAMgC,aACvC,gBACN,UAEN,IAAK1C,EACD,IACIuB,SAASC,eAAe,YAAad,MAAM+B,MAAQ,MAEnDlB,SAASC,eAAe,YAAad,MAAMgC,aACvC,gBACN,UAGN,IAAKxC,EACD,IACIqB,SAASC,eAAe,WAAYd,MAAM+B,MAAQ,MAElDlB,SAASC,eAAe,WAAYd,MAAMgC,aACtC,gBACN,UAGN,IAAKpC,EACD,IACIiB,SAASC,eAAe,YAAad,MAAM+B,MAAQ,MAEnDlB,SAASC,eAAe,YAAad,MAAMgC,aACvC,gBACN,UAKN,OAFAnB,SAASC,eAAe,cAAeoB,UACnC,uCACG,EAGX,OAAO,GAGIC,EApOE,SAAC,GAAoB,IHkMEjD,EGlMpBC,EAAiB,EAAjBA,MAEZC,EAWAD,EAXAC,WACAC,EAUAF,EAVAE,aACAC,EASAH,EATAG,UACAC,EAQAJ,EARAI,YACAC,EAOAL,EAPAK,SACAC,EAMAN,EANAM,YACAC,EAKAP,EALAO,IACAC,EAIAR,EAJAQ,OACAC,EAGAT,EAHAS,aACAC,EAEAV,EAFAU,eACAuC,EACAjD,EADAiD,YAZ6B,EHmMxBtC,IAA0ErB,EAAkBS,GGpL9FmD,EAf0B,oBAiBjC,OACI,oCACI,uCACA,wBACIrC,MAAO,CACHsC,UAAW,SACXP,MAAO,QAEX1B,QAAS,cAET,0BACIF,UAAU,WACVE,QAAS,WACL+B,GAAY,KAHpB,cASJ,yBAAKjC,UAAU,UACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CACIhB,MAAO,CACHC,aACAC,eACAC,YACAC,cACAC,WACAC,iBAGR,yBACIU,UAAU,YACVH,MAAO,CACHY,MAAO,MACPV,WAAY,OAGhB,2BACIG,QAAS,WACL,IACIQ,SAASC,eACL,aACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,aACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACCvB,IACDmB,SAASC,eACL,aACDd,MAAMe,UAAY,KAG7BG,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIzB,EAAOyB,EAAEC,OAAOH,UAEnC,2BAAOI,GAAG,aAAV,mBAEJ,yBACInB,UAAU,YACVH,MAAO,CACHY,MAAO,MACPV,WAAY,OAGhB,2BACIoB,GAAG,WACHjB,QAAS,WACL,IACIQ,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACCrB,IACDiB,SAASC,eACL,YACDd,MAAMe,UAAY,KAG7BG,MAAOtB,EACPuB,SAAU,SAAAC,GAAC,OAAIvB,EAAeuB,EAAEC,OAAOH,UAE3C,2BAAOI,GAAG,YAAV,mBAIZ,0BACInB,UAAU,SACVH,MAAO,CAAE+B,MAAO,OAChBT,GAAG,eAEP,yBAAKnB,UAAU,UACX,4BACIA,UAAU,YACVE,QAAO,uCAAE,WAAMe,GAAN,eAAAG,EAAA,yDACLH,EAAEmB,iBAEFZ,EAAY,CAAC,KAAM,KAAM,IAAK,OAGzBM,EAAkB,CACf7C,aACAE,YACAE,WACAI,iBAVH,iEAgBWyC,EAAS,CACrBX,UAAW,CACPhC,MACAN,aACAE,YACAE,WACAI,kBAtBH,OA0BL,IAVI4C,EAhBC,QA0BGC,KAAMJ,SAASK,WACnBlC,OAAOC,SAASC,cAEhB,IACIG,SAASC,eACL,cACDoB,UAAYM,EAAIC,KAAMJ,SAASM,OAAS,GAC7C,UAjCD,2CAAF,uDAFX,cCnHHC,EAAwB,WAAO,IJ0MV1D,EI1MS,EACJ2D,mBAAS,IADL,mBAChCzD,EADgC,KACpBC,EADoB,OAENwD,mBAAS,IAFH,mBAEhCvD,EAFgC,KAErBC,EAFqB,OAGPsD,mBAAS,IAHF,mBAGhCrD,EAHgC,KAGtBC,EAHsB,OJ2M9BK,IAA2DpB,EAAeQ,GIvM3EuD,EAJ+B,EAI/BA,KAJ+B,KAIzBK,QACuBD,oBAAS,IALP,mBAKhCE,EALgC,KAKjBX,EALiB,OAMjBS,mBAAS,IANQ,mBAMhCnD,EANgC,KAM3BC,EAN2B,OAOAkD,mBAAS,IAPT,mBAOhCjD,EAPgC,KAOlBC,EAPkB,OJwKhC,SAA0BX,GAC/B,OAAOY,IAAoEtB,EAAeU,GIhK5E8D,GAATC,EATgC,sBJ2IhC,SAA+B/D,GACpC,OAAOY,IAA8EzB,EAAoBa,GIlIrFgE,GAAfC,EAVgC,oBAYvCC,qBAAU,WACN,GAAIhE,EACA,IACIyB,SAASC,eAAe,YAAad,MAAMe,UACvC,gBACN,UAEN,GAAIzB,EACA,IACIuB,SAASC,eAAe,YAAad,MAAMe,UACvC,gBACN,UAEN,GAAIrB,EACA,IACImB,SAASC,eAAe,aAAcd,MAAMe,UACxC,gBACN,UAEN,GAAInB,EACA,IACIiB,SAASC,eAAe,YAAad,MAAMe,UACvC,gBACN,cAIV,IAAMsC,EAAK,uCAAG,4BAAA9B,EAAA,yDACLnC,GAAeE,GAAcE,EADxB,iBAgBN,GAdAqB,SAASC,eAAT,YAAqCd,MAAM+B,MAAQ,QAEnDlB,SAASC,eAAT,YAAqCd,MAAMgC,aACvC,kBAEJnB,SAASC,eAAT,YAAqCd,MAAM+B,MAAQ,QAEnDlB,SAASC,eAAT,YAAqCd,MAAMgC,aACvC,kBACJnB,SAASC,eAAT,WAAoCd,MAAM+B,MAAQ,QAElDlB,SAASC,eAAT,WAAoCd,MAAMgC,aACtC,mBAEC5C,EACD,IACIyB,SAASC,eAAe,YAAad,MAAM+B,MAAQ,MAEnDlB,SAASC,eAAe,YAAad,MAAMgC,aACvC,gBACN,UAEN,IAAK1C,EACD,IACIuB,SAASC,eAAe,YAAad,MAAM+B,MAAQ,MAEnDlB,SAASC,eAAe,YAAad,MAAMgC,aACvC,gBACN,UAGN,IAAKxC,EACD,IACIqB,SAASC,eAAe,WAAYd,MAAM+B,MAAQ,MAElDlB,SAASC,eAAe,WAAYd,MAAMgC,aACtC,gBACN,UAvCA,yCA0CiBiB,EAAM,CACzBvB,UAAW,CACPtC,aACAE,YACAE,cA9CF,SA0CA8D,EA1CA,SAkDUA,EAASb,OACrBvE,EAAeoF,EAASb,KAAKY,MAAMpF,aAAe,IAClDqC,aAAaiD,QACT,MACAD,EAASb,KAAKY,MAAMG,cAAgB,IAExChD,OAAOC,SAASC,UAxDd,4CAAH,qDA6DX,OACI,yBAAKP,UAAU,eACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,uCAEA,4BACOsC,EACGA,EAAKgB,MAAMC,KAAI,SAACC,EAAK9B,GACjB,IACIJ,EADE7C,EAAQR,IAERQ,IAIF6C,EAHU3C,IACNF,GAES6C,QAGjB,OACI9C,KACA8D,EAAKgB,MAAM5B,GAAGP,KAAOG,GAGF,KAAfrC,GACc,KAAdE,IAEAD,EACIoD,EAAKgB,MAAM5B,GACNzC,YAETG,EACIkD,EAAKgB,MAAM5B,GACNvC,WAGTK,EAAO8C,EAAKgB,MAAM5B,GAAGnC,KACrBG,EACI4C,EAAKgB,MAAM5B,GACNjC,eAKT,wBAAIgE,IAAK/B,GAAT,KACO8B,EAAIvE,WADX,IACwB,IACnBuE,EAAIrE,UACL,oCACKX,IACG,uBACIqB,MAAO,CACHE,WACI,OACJ6B,MAAO,WAEX1B,QAAS,WACL8C,EACI,CACIzB,UACI,CACID,OAAQgB,EACHgB,MACD5B,GAECP,MAIrBd,OAAOC,SAASC,UAEpBP,UAAU,cACVC,cAAY,SAEhB,QAMZ,wBAAIwD,IAAK/B,GACJ8B,EAAIvE,WADT,IACsB,IACjBuE,EAAIrE,UACL,oCACKX,IACG,uBACIqB,MAAO,CACHE,WACI,OACJ6B,MAAO,WAEX1B,QAAS,WACL8C,EACI,CACIzB,UACI,CACID,OAAQgB,EACHgB,MACD5B,GAECP,MAKrBd,OAAOC,SAASC,UAEpBP,UAAU,cACVC,cAAY,SAEhB,UAMxB,QAIlB,yBAAKD,UAAU,SACX,yBAAKA,UAAU,aACVxB,IACG,kBAAC,EAAD,CACIQ,MAAO,CACHC,aACAC,eACAC,YACAC,cACAC,WACAC,cACAC,MACAC,SACAC,eACAC,oBAIR,oCACMkD,EA0CE,oCACI,kBAAC,EAAD,CACI5D,MAAO,CACHC,aACAC,eACAC,YACAC,cACAC,WACAC,cACAC,MACAC,SACAC,eACAC,iBACAuC,kBAtDZ,oCACI,sCACA,wBACIpC,MAAO,CACHsC,UAAW,SACXP,MAAO,SAGX,0BACI5B,UAAU,WACVE,QAAS,WACL+B,GAAY,KAHpB,YASJ,yBAAKjC,UAAU,UACX,yBAAKA,UAAU,aACX,kBAAC,EAAD,CACIhB,MAAO,CACHC,aACAC,eACAC,YACAC,cACAC,WACAC,mBAKhB,yBAAKU,UAAU,UACX,4BACIA,UAAU,YACVE,QAAS,kBAAMgD,MAFnB,oBAsCvCQ,EAAiB,SAAC,GAAoB,IAAlB1E,EAAiB,EAAjBA,MAEzBC,EAMAD,EANAC,WACAC,EAKAF,EALAE,aACAC,EAIAH,EAJAG,UACAC,EAGAJ,EAHAI,YACAC,EAEAL,EAFAK,SACAC,EACAN,EADAM,YAGJ,OACI,oCACI,yBACIU,UAAU,YACVH,MAAO,CACHE,WAAY,KACZU,MAAO,MACPkD,QAAS,iBAGb,2BACIxC,GAAG,WACHjB,QAAS,WACL,IACIQ,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACC7B,IACDyB,SAASC,eACL,YACDd,MAAMe,UAAY,KAG7BG,MAAO9B,EACP+B,SAAU,SAAAC,GAAC,OAAI/B,EAAa+B,EAAEC,OAAOH,UAEzC,2BAAOI,GAAG,YAAV,eAGJ,yBACInB,UAAU,YACVH,MAAO,CACHE,WAAY,KACZU,MAAO,MACPkD,QAAS,iBAGb,2BACIxC,GAAG,WACHjB,QAAS,WACL,IACIQ,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,YACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACC3B,IACDuB,SAASC,eACL,YACDd,MAAMe,UAAY,KAG7BG,MAAO5B,EACP6B,SAAU,SAAAC,GAAC,OAAI7B,EAAY6B,EAAEC,OAAOH,UAExC,2BAAOI,GAAG,YAAV,cAGJ,yBACInB,UAAU,YACVH,MAAO,CACHY,MAAO,MACPV,WAAY,OAGhB,2BACIoB,GAAG,UACHjB,QAAS,WACL,IACIQ,SAASC,eACL,WACDd,MAAMe,UAAY,gBACvB,YAENC,QAAS,WACL,IACIH,SAASC,eACL,WACDd,MAAMe,UAAY,gBACvB,YAENE,OAAQ,WACCzB,IACDqB,SAASC,eACL,WACDd,MAAMe,UAAY,KAG7BG,MAAO1B,EACP2B,SAAU,SAAAC,GAAC,OAAI3B,EAAY2B,EAAEC,OAAOH,QACpC6C,KAAK,aAET,2BAAOzC,GAAG,WAAV,e,sDChbV0C,EAAQ,IAAIC,IAAc,IAC5BC,EAAM,GAEJC,EAAc,IAAIC,KACpB,SAACC,EAAWC,GAAZ,OACI,IAAIC,KAAW,SAAAC,GACX,IAAIC,EAqBJ,OApBAC,QAAQC,QAAQN,GACXO,MAAK,SAAAP,GACF,IAAMpG,EAAcG,IAChBH,GACAoG,EAAUQ,WAAW,CACjBC,QAAS,CACLC,cAAc,UAAD,OAAY9G,SAKxC2G,MAAK,WACFH,EAASH,EAAQD,GAAWW,UAAU,CAClCC,KAAMT,EAASS,KAAKC,KAAKV,GACzB7B,MAAO6B,EAAS7B,MAAMuC,KAAKV,GAC3BW,SAAUX,EAASW,SAASD,KAAKV,QAGxCY,MAAMZ,EAAS7B,MAAMuC,KAAKV,IAExB,WACCC,GAAQA,EAAOY,qBAM/BnB,EAAM,iDAKV,IAAMoB,EAAS,IAAIC,IAAa,CAC5BC,KAAMpB,IAAWqB,KAAK,CAClB,IAAIC,IAAiB,CACjBC,iBAAkB,cAClBC,wBAAyB,WACrB,IAAMhH,EAAQR,IAEd,IAAKQ,EACD,OAAO,EAGX,IAAK,IACOC,EAAQC,IAAUF,GAAlBC,IACR,QAAIE,KAAKC,OAAe,IAANH,GAKpB,SACE,OAAO,IAGfgH,iBAAkB,WACd,OAAOC,MAAM,GAAD,OAAI5B,EAAJ,kBAAyB,CACjC6B,OAAQ,OACRC,YAAa,aAGrBC,YAAa,SAAAhI,GACTC,EAAeD,IAEnBiI,YAAa,SAAAC,GACTC,QAAQC,KAAK,iDACbD,QAAQzD,MAAMwD,MAGtBG,aAAQ,YAAsC,IAAnCC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACtBJ,QAAQK,IAAIF,GACZH,QAAQK,IAAID,MAEhBrC,EACA,IAAIuC,IAAS,CACTC,IAAI,GAAD,OAAKzC,EAAL,YACH8B,YAAa,cAGrBhC,UAGJ4C,IAASC,OACL,kBAAC,IAAD,CAAgBvB,OAAQA,GACpB,mBChG4B,WAAO,IAAD,EACRzC,oBAAS,GADD,mBAC/BC,EAD+B,KACtBgE,EADsB,KAGlC5C,EAAM,GAuBV,OArBIA,EAAM,iDAKVd,qBAAU,WACN,IAAII,EAAelD,aAAayG,QAAQ,QAAU,GAClDjB,MAAM,GAAD,OAAI5B,EAAJ,kBAAyB,CAC1B6B,OAAQ,OACRC,YAAa,UACblB,QAAS,CACLtB,aAAcA,GAAgB,MAEnCoB,KANH,uCAMQ,WAAMpC,GAAN,mBAAAjB,EAAA,sEACwCiB,EAAIwE,OAD5C,gBACI/I,EADJ,EACIA,YAAauF,EADjB,EACiBA,aACrBtF,EAAeD,GACfqC,aAAaiD,QAAQ,MAAOC,GAAgB,IAC5CsD,GAAW,GAJP,2CANR,0DAcAhE,EAEI,yBAAK3C,UAAU,cAAcH,MAAO,CAAEiH,gBAAiB,SACnD,yBAAK9G,UAAU,gBACX,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,iBAGnB,yBAAK+G,QAAQ,MAAMC,MAAM,8BACrB,8BACI,4BAAQ7F,GAAG,OACP,oCACI8F,GAAG,gBACHC,OAAO,OACPC,aAAa,OAEjB,mCACIF,GAAG,OACHG,KAAK,SACLC,OAAO,+CACPH,OAAO,YAS5B,kBAAC,EAAD,QDsCH,OAEJxG,SAASC,eAAe,W","file":"static/js/main.24580918.chunk.js","sourcesContent":["let accessToken = \"\";\n\nexport const setAccessToken = (s: string) => {\n  accessToken = s;\n};\n\nexport const getAccessToken = () => {\n  return accessToken;\n};\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string,\n  String: string,\n  Boolean: boolean,\n  Int: number,\n  Float: number,\n};\n\n\nexport type GetUsersResponse = {\n   __typename?: 'getUsersResponse',\n  first_name: Scalars['String'],\n  last_name: Scalars['String'],\n  id: Scalars['Int'],\n  age: Scalars['String'],\n  phone_number: Scalars['String'],\n};\n\nexport type LoginResponse = {\n   __typename?: 'LoginResponse',\n  accessToken?: Maybe<Scalars['String']>,\n  refreshToken?: Maybe<Scalars['String']>,\n};\n\nexport type Mutation = {\n   __typename?: 'Mutation',\n  login: LoginResponse,\n  register: RegisterResponse,\n  editAccount: Scalars['Boolean'],\n  deleteUser: Scalars['Boolean'],\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'],\n  last_name: Scalars['String'],\n  first_name: Scalars['String']\n};\n\n\nexport type MutationRegisterArgs = {\n  phone_number: Scalars['String'],\n  age: Scalars['String'],\n  password: Scalars['String'],\n  last_name: Scalars['String'],\n  first_name: Scalars['String']\n};\n\n\nexport type MutationEditAccountArgs = {\n  phone_number: Scalars['String'],\n  age: Scalars['String'],\n  password: Scalars['String'],\n  last_name: Scalars['String'],\n  first_name: Scalars['String'],\n  userId: Scalars['Float']\n};\n\n\nexport type MutationDeleteUserArgs = {\n  userId: Scalars['Float']\n};\n\nexport type Query = {\n   __typename?: 'Query',\n  users: Array<GetUsersResponse>,\n};\n\nexport type RegisterResponse = {\n   __typename?: 'RegisterResponse',\n  successful: Scalars['Boolean'],\n  error?: Maybe<Scalars['String']>,\n};\nexport type DeleteUserMutationVariables = {\n  userId: Scalars['Float']\n};\n\n\nexport type DeleteUserMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'deleteUser'>\n);\n\nexport type EditAccountMutationVariables = {\n  userId: Scalars['Float'],\n  first_name: Scalars['String'],\n  last_name: Scalars['String'],\n  password: Scalars['String'],\n  age: Scalars['String'],\n  phone_number: Scalars['String']\n};\n\n\nexport type EditAccountMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'editAccount'>\n);\n\nexport type LoginMutationVariables = {\n  first_name: Scalars['String'],\n  last_name: Scalars['String'],\n  password: Scalars['String']\n};\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type RegisterMutationVariables = {\n  first_name: Scalars['String'],\n  last_name: Scalars['String'],\n  password: Scalars['String'],\n  age: Scalars['String'],\n  phone_number: Scalars['String']\n};\n\n\nexport type RegisterMutation = (\n  { __typename?: 'Mutation' }\n  & { register: (\n    { __typename?: 'RegisterResponse' }\n    & Pick<RegisterResponse, 'successful' | 'error'>\n  ) }\n);\n\nexport type UsersQueryVariables = {};\n\n\nexport type UsersQuery = (\n  { __typename?: 'Query' }\n  & { users: Array<(\n    { __typename?: 'getUsersResponse' }\n    & Pick<GetUsersResponse, 'first_name' | 'last_name' | 'id' | 'age' | 'phone_number'>\n  )> }\n);\n\nexport const DeleteUserDocument = gql`\n    mutation deleteUser($userId: Float!) {\n  deleteUser(userId: $userId)\n}\n    `;\nexport type DeleteUserMutationFn = ApolloReactCommon.MutationFunction<DeleteUserMutation, DeleteUserMutationVariables>;\n\n    export function useDeleteUserMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<DeleteUserMutation, DeleteUserMutationVariables>) {\n      return ApolloReactHooks.useMutation<DeleteUserMutation, DeleteUserMutationVariables>(DeleteUserDocument, baseOptions);\n    }\nexport type DeleteUserMutationHookResult = ReturnType<typeof useDeleteUserMutation>;\nexport type DeleteUserMutationResult = ApolloReactCommon.MutationResult<DeleteUserMutation>;\nexport type DeleteUserMutationOptions = ApolloReactCommon.BaseMutationOptions<DeleteUserMutation, DeleteUserMutationVariables>;\nexport const EditAccountDocument = gql`\n    mutation editAccount($userId: Float!, $first_name: String!, $last_name: String!, $password: String!, $age: String!, $phone_number: String!) {\n  editAccount(userId: $userId, first_name: $first_name, last_name: $last_name, password: $password, age: $age, phone_number: $phone_number)\n}\n    `;\nexport type EditAccountMutationFn = ApolloReactCommon.MutationFunction<EditAccountMutation, EditAccountMutationVariables>;\n\n    export function useEditAccountMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<EditAccountMutation, EditAccountMutationVariables>) {\n      return ApolloReactHooks.useMutation<EditAccountMutation, EditAccountMutationVariables>(EditAccountDocument, baseOptions);\n    }\nexport type EditAccountMutationHookResult = ReturnType<typeof useEditAccountMutation>;\nexport type EditAccountMutationResult = ApolloReactCommon.MutationResult<EditAccountMutation>;\nexport type EditAccountMutationOptions = ApolloReactCommon.BaseMutationOptions<EditAccountMutation, EditAccountMutationVariables>;\nexport const LoginDocument = gql`\n    mutation login($first_name: String!, $last_name: String!, $password: String!) {\n  login(first_name: $first_name, last_name: $last_name, password: $password) {\n    accessToken\n    refreshToken\n  }\n}\n    `;\nexport type LoginMutationFn = ApolloReactCommon.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n    export function useLoginMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n      return ApolloReactHooks.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n    }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = ApolloReactCommon.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = ApolloReactCommon.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const RegisterDocument = gql`\n    mutation register($first_name: String!, $last_name: String!, $password: String!, $age: String!, $phone_number: String!) {\n  register(first_name: $first_name, last_name: $last_name, password: $password, age: $age, phone_number: $phone_number) {\n    successful\n    error\n  }\n}\n    `;\nexport type RegisterMutationFn = ApolloReactCommon.MutationFunction<RegisterMutation, RegisterMutationVariables>;\n\n    export function useRegisterMutation(baseOptions?: ApolloReactHooks.MutationHookOptions<RegisterMutation, RegisterMutationVariables>) {\n      return ApolloReactHooks.useMutation<RegisterMutation, RegisterMutationVariables>(RegisterDocument, baseOptions);\n    }\nexport type RegisterMutationHookResult = ReturnType<typeof useRegisterMutation>;\nexport type RegisterMutationResult = ApolloReactCommon.MutationResult<RegisterMutation>;\nexport type RegisterMutationOptions = ApolloReactCommon.BaseMutationOptions<RegisterMutation, RegisterMutationVariables>;\nexport const UsersDocument = gql`\n    query Users {\n  users {\n    first_name\n    last_name\n    id\n    age\n    phone_number\n  }\n}\n    `;\n\n    export function useUsersQuery(baseOptions?: ApolloReactHooks.QueryHookOptions<UsersQuery, UsersQueryVariables>) {\n      return ApolloReactHooks.useQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n    }\n      export function useUsersLazyQuery(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<UsersQuery, UsersQueryVariables>) {\n        return ApolloReactHooks.useLazyQuery<UsersQuery, UsersQueryVariables>(UsersDocument, baseOptions);\n      }\n      \nexport type UsersQueryHookResult = ReturnType<typeof useUsersQuery>;\nexport type UsersQueryResult = ApolloReactCommon.QueryResult<UsersQuery, UsersQueryVariables>;","import jwtDecode from \"jwt-decode\";\r\nimport { getAccessToken } from \"./accessToken\";\r\n\r\nexport const checkIfAuth = () => {\r\n    const token = getAccessToken();\r\n\r\n    if (!token) {\r\n        return false;\r\n    }\r\n\r\n    try {\r\n        const { exp } = jwtDecode(token) as any;\r\n        if (Date.now() >= exp * 1000) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    } catch {\r\n        return false;\r\n    }\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport React from \"react\";\r\nimport { getAccessToken, setAccessToken } from \"../accessToken\";\r\nimport { useEditAccountMutation } from \"../generated/graphql\";\r\nimport { UserDataInputs } from \"./Home\";\r\n\r\nconst EditAccount = ({ props }: any) => {\r\n    let {\r\n        first_name,\r\n        setFirstName,\r\n        last_name,\r\n        setLastName,\r\n        password,\r\n        setPassword,\r\n        age,\r\n        setAge,\r\n        phone_number,\r\n        setPhoneNumber,\r\n    } = props;\r\n\r\n    const [editAccount] = useEditAccountMutation();\r\n\r\n    const logout = () => {\r\n        try {\r\n            setAccessToken(\" \");\r\n            localStorage.removeItem(\"urd\");\r\n            window.location.reload();\r\n        } catch {}\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ marginBottom: \"15px\" }}>\r\n                Edit your account\r\n                <i\r\n                    style={{ marginLeft: \"20px\" }}\r\n                    className=\"fa fa-sign-out\"\r\n                    aria-hidden=\"true\"\r\n                    onClick={() => logout()}\r\n                ></i>\r\n            </h1>\r\n\r\n            <div className=\"center\">\r\n                <div className=\"container\">\r\n                    <UserDataInputs\r\n                        props={{\r\n                            first_name,\r\n                            setFirstName,\r\n                            last_name,\r\n                            setLastName,\r\n                            password,\r\n                            setPassword,\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className=\"input-box\"\r\n                        style={{\r\n                            width: \"85%\",\r\n                            marginLeft: \"5%\",\r\n                        }}\r\n                    >\r\n                        <input\r\n                            onClick={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"age-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onFocus={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"age-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onBlur={() => {\r\n                                if (!age) {\r\n                                    document.getElementById(\r\n                                        \"age-label\"\r\n                                    )!.style.transform = \"\";\r\n                                }\r\n                            }}\r\n                            value={age}\r\n                            onChange={e => setAge(e.target.value)}\r\n                        />\r\n                        <label id=\"age-label\">Age</label>\r\n                    </div>\r\n                    <div\r\n                        className=\"input-box\"\r\n                        style={{\r\n                            width: \"85%\",\r\n                            marginLeft: \"5%\",\r\n                        }}\r\n                    >\r\n                        <input\r\n                            onClick={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"pn-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onFocus={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"pn-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onBlur={() => {\r\n                                if (!phone_number) {\r\n                                    document.getElementById(\r\n                                        \"pn-label\"\r\n                                    )!.style.transform = \"\";\r\n                                }\r\n                            }}\r\n                            value={phone_number}\r\n                            onChange={e => setPhoneNumber(e.target.value)}\r\n                        />\r\n                        <label id=\"pn-label\">Phone Number</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"center\">\r\n                <button\r\n                    className=\"login-btn\"\r\n                    onClick={async () => {\r\n                        const token = getAccessToken();\r\n                        let userId;\r\n                        if (!!token) {\r\n                            let tmp = jwtDecode(token) as any;\r\n                            userId = tmp.userId;\r\n                        }\r\n\r\n                        await editAccount({\r\n                            variables: {\r\n                                age,\r\n                                first_name,\r\n                                last_name,\r\n                                password,\r\n                                phone_number,\r\n                                userId,\r\n                            },\r\n                        });\r\n\r\n                        window.location.reload();\r\n                    }}\r\n                >\r\n                    SUBMIT\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditAccount;\r\n","import React from \"react\";\r\nimport { useRegisterMutation } from \"../generated/graphql\";\r\nimport { UserDataInputs } from \"./Home\";\r\n\r\nconst Register = ({ props }: any) => {\r\n    let {\r\n        first_name,\r\n        setFirstName,\r\n        last_name,\r\n        setLastName,\r\n        password,\r\n        setPassword,\r\n        age,\r\n        setAge,\r\n        phone_number,\r\n        setPhoneNumber,\r\n        setRegister,\r\n    } = props;\r\n\r\n    const [register] = useRegisterMutation();\r\n\r\n    return (\r\n        <>\r\n            <h1>Sign Up</h1>\r\n            <h5\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    color: \"blue\",\r\n                }}\r\n                onClick={() => {}}\r\n            >\r\n                <span\r\n                    className=\"noselect\"\r\n                    onClick={() => {\r\n                        setRegister(false);\r\n                    }}\r\n                >\r\n                    Or Log In\r\n                </span>\r\n            </h5>\r\n            <div className=\"center\">\r\n                <div className=\"container\">\r\n                    <UserDataInputs\r\n                        props={{\r\n                            first_name,\r\n                            setFirstName,\r\n                            last_name,\r\n                            setLastName,\r\n                            password,\r\n                            setPassword,\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className=\"input-box\"\r\n                        style={{\r\n                            width: \"85%\",\r\n                            marginLeft: \"5%\",\r\n                        }}\r\n                    >\r\n                        <input\r\n                            onClick={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"age-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onFocus={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"age-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onBlur={() => {\r\n                                if (!age) {\r\n                                    document.getElementById(\r\n                                        \"age-label\"\r\n                                    )!.style.transform = \"\";\r\n                                }\r\n                            }}\r\n                            value={age}\r\n                            onChange={e => setAge(e.target.value)}\r\n                        />\r\n                        <label id=\"age-label\">Age (Optional)</label>\r\n                    </div>\r\n                    <div\r\n                        className=\"input-box\"\r\n                        style={{\r\n                            width: \"85%\",\r\n                            marginLeft: \"5%\",\r\n                        }}\r\n                    >\r\n                        <input\r\n                            id=\"pn-input\"\r\n                            onClick={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"pn-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onFocus={() => {\r\n                                try {\r\n                                    document.getElementById(\r\n                                        \"pn-label\"\r\n                                    )!.style.transform = \"translateY(0)\";\r\n                                } catch {}\r\n                            }}\r\n                            onBlur={() => {\r\n                                if (!phone_number) {\r\n                                    document.getElementById(\r\n                                        \"pn-label\"\r\n                                    )!.style.transform = \"\";\r\n                                }\r\n                            }}\r\n                            value={phone_number}\r\n                            onChange={e => setPhoneNumber(e.target.value)}\r\n                        />\r\n                        <label id=\"pn-label\">Phone Number</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <span\r\n                className=\"center\"\r\n                style={{ color: \"red\" }}\r\n                id=\"error-zone\"\r\n            ></span>\r\n            <div className=\"center\">\r\n                <button\r\n                    className=\"login-btn\"\r\n                    onClick={async e => {\r\n                        e.preventDefault();\r\n\r\n                        resetInputs([\"fn\", \"ln\", \"p\", \"pn\"]);\r\n\r\n                        if (\r\n                            !runInputValdation({\r\n                                first_name,\r\n                                last_name,\r\n                                password,\r\n                                phone_number,\r\n                            })\r\n                        ) {\r\n                            return;\r\n                        }\r\n\r\n                        let res = await register({\r\n                            variables: {\r\n                                age,\r\n                                first_name,\r\n                                last_name,\r\n                                password,\r\n                                phone_number,\r\n                            },\r\n                        });\r\n\r\n                        if (res.data!.register.successful) {\r\n                            window.location.reload();\r\n                        } else {\r\n                            try {\r\n                                document.getElementById(\r\n                                    \"error-zone\"\r\n                                )!.innerHTML = res.data!.register.error || \"\";\r\n                            } catch {}\r\n                        }\r\n                    }}\r\n                >\r\n                    Sign Up\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst resetInputs = (arr: string[]) => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n        try {\r\n            document.getElementById(`${arr[i]}-label`)!.style.color = \"black\";\r\n\r\n            document.getElementById(`${arr[i]}-input`)!.style.borderBottom =\r\n                \"1px solid black\";\r\n        } catch {}\r\n    }\r\n};\r\n\r\nconst runInputValdation = (props: any) => {\r\n    let { first_name, last_name, password, phone_number } = props;\r\n    if (!first_name || !last_name || !password || !phone_number) {\r\n        if (!first_name) {\r\n            try {\r\n                document.getElementById(\"fn-label\")!.style.color = \"red\";\r\n\r\n                document.getElementById(\"fn-input\")!.style.borderBottom =\r\n                    \"1px solid red\";\r\n            } catch {}\r\n        }\r\n        if (!last_name) {\r\n            try {\r\n                document.getElementById(\"ln-label\")!.style.color = \"red\";\r\n\r\n                document.getElementById(\"ln-input\")!.style.borderBottom =\r\n                    \"1px solid red\";\r\n            } catch {}\r\n        }\r\n\r\n        if (!password) {\r\n            try {\r\n                document.getElementById(\"p-label\")!.style.color = \"red\";\r\n\r\n                document.getElementById(\"p-input\")!.style.borderBottom =\r\n                    \"1px solid red\";\r\n            } catch {}\r\n        }\r\n\r\n        if (!phone_number) {\r\n            try {\r\n                document.getElementById(\"pn-label\")!.style.color = \"red\";\r\n\r\n                document.getElementById(\"pn-input\")!.style.borderBottom =\r\n                    \"1px solid red\";\r\n            } catch {}\r\n        }\r\n\r\n        document.getElementById(\"error-zone\")!.innerHTML =\r\n            \"Please fill in the following fields\";\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n    useDeleteUserMutation,\n    useLoginMutation,\n    useUsersQuery,\n} from \"../generated/graphql\";\nimport \"../css/main.css\";\nimport { getAccessToken, setAccessToken } from \"../accessToken\";\nimport { checkIfAuth } from \"../Auth\";\nimport jwtDecode from \"jwt-decode\";\nimport EditAccount from \"./EditAccount\";\nimport Register from \"./Register\";\ninterface Props {}\n\nexport const Home: React.FC<Props> = () => {\n    const [first_name, setFirstName] = useState(\"\");\n    const [last_name, setLastName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const { data, loading } = useUsersQuery();\n    const [registerState, setRegister] = useState(false);\n    const [age, setAge] = useState(\"\");\n    const [phone_number, setPhoneNumber] = useState(\"\");\n\n    const [LOGIN] = useLoginMutation();\n    const [DELETE_USER] = useDeleteUserMutation();\n\n    useEffect(() => {\n        if (first_name) {\n            try {\n                document.getElementById(\"fn-label\")!.style.transform =\n                    \"translateY(0)\";\n            } catch {}\n        }\n        if (last_name) {\n            try {\n                document.getElementById(\"ln-label\")!.style.transform =\n                    \"translateY(0)\";\n            } catch {}\n        }\n        if (age) {\n            try {\n                document.getElementById(\"age-label\")!.style.transform =\n                    \"translateY(0)\";\n            } catch {}\n        }\n        if (phone_number) {\n            try {\n                document.getElementById(\"pn-label\")!.style.transform =\n                    \"translateY(0)\";\n            } catch {}\n        }\n    });\n\n    const login = async () => {\n        if (!first_name || !last_name || !password) {\n            document.getElementById(`fn-label`)!.style.color = \"black\";\n\n            document.getElementById(`fn-input`)!.style.borderBottom =\n                \"1px solid black\";\n\n            document.getElementById(`ln-label`)!.style.color = \"black\";\n\n            document.getElementById(`ln-input`)!.style.borderBottom =\n                \"1px solid black\";\n            document.getElementById(`p-label`)!.style.color = \"black\";\n\n            document.getElementById(`p-input`)!.style.borderBottom =\n                \"1px solid black\";\n\n            if (!first_name) {\n                try {\n                    document.getElementById(\"fn-label\")!.style.color = \"red\";\n\n                    document.getElementById(\"fn-input\")!.style.borderBottom =\n                        \"1px solid red\";\n                } catch {}\n            }\n            if (!last_name) {\n                try {\n                    document.getElementById(\"ln-label\")!.style.color = \"red\";\n\n                    document.getElementById(\"ln-input\")!.style.borderBottom =\n                        \"1px solid red\";\n                } catch {}\n            }\n\n            if (!password) {\n                try {\n                    document.getElementById(\"p-label\")!.style.color = \"red\";\n\n                    document.getElementById(\"p-input\")!.style.borderBottom =\n                        \"1px solid red\";\n                } catch {}\n            }\n        } else {\n            const response = await LOGIN({\n                variables: {\n                    first_name,\n                    last_name,\n                    password,\n                },\n            });\n\n            if (response && response.data) {\n                setAccessToken(response.data.login.accessToken || \"\");\n                localStorage.setItem(\n                    \"urd\",\n                    response.data.login.refreshToken || \"\"\n                );\n                window.location.reload();\n            }\n        }\n    };\n\n    return (\n        <div className=\"pageWrapper\">\n            <div className=\"verticle-align\">\n                <div className=\"horizontal-align\">\n                    <div className=\"contentWrapper\">\n                        <div className=\"left\">\n                            <div className=\"text\">\n                                <h1>Users :</h1>\n\n                                <ul>\n                                    {!!data\n                                        ? data.users.map((val, i) => {\n                                              const token = getAccessToken();\n                                              let userId;\n                                              if (!!token) {\n                                                  let tmp = jwtDecode(\n                                                      token\n                                                  ) as any;\n                                                  userId = tmp.userId;\n                                              }\n\n                                              if (\n                                                  checkIfAuth() &&\n                                                  data.users[i].id === userId\n                                              ) {\n                                                  if (\n                                                      first_name === \"\" &&\n                                                      last_name === \"\"\n                                                  ) {\n                                                      setFirstName(\n                                                          data.users[i]\n                                                              .first_name\n                                                      );\n                                                      setLastName(\n                                                          data.users[i]\n                                                              .last_name\n                                                      );\n\n                                                      setAge(data.users[i].age);\n                                                      setPhoneNumber(\n                                                          data.users[i]\n                                                              .phone_number\n                                                      );\n                                                  }\n\n                                                  return (\n                                                      <li key={i}>\n                                                          * {val.first_name},{\" \"}\n                                                          {val.last_name}\n                                                          <>\n                                                              {checkIfAuth() ? (\n                                                                  <i\n                                                                      style={{\n                                                                          marginLeft:\n                                                                              \"10px\",\n                                                                          color: \"#ff2929\",\n                                                                      }}\n                                                                      onClick={() => {\n                                                                          DELETE_USER(\n                                                                              {\n                                                                                  variables:\n                                                                                      {\n                                                                                          userId: data\n                                                                                              .users[\n                                                                                              i\n                                                                                          ]\n                                                                                              .id,\n                                                                                      },\n                                                                              }\n                                                                          );\n                                                                          window.location.reload();\n                                                                      }}\n                                                                      className=\"fa fa-trash\"\n                                                                      aria-hidden=\"true\"\n                                                                  ></i>\n                                                              ) : null}\n                                                          </>\n                                                      </li>\n                                                  );\n                                              } else {\n                                                  return (\n                                                      <li key={i}>\n                                                          {val.first_name},{\" \"}\n                                                          {val.last_name}\n                                                          <>\n                                                              {checkIfAuth() ? (\n                                                                  <i\n                                                                      style={{\n                                                                          marginLeft:\n                                                                              \"10px\",\n                                                                          color: \"#ff2929\",\n                                                                      }}\n                                                                      onClick={() => {\n                                                                          DELETE_USER(\n                                                                              {\n                                                                                  variables:\n                                                                                      {\n                                                                                          userId: data\n                                                                                              .users[\n                                                                                              i\n                                                                                          ]\n                                                                                              .id,\n                                                                                      },\n                                                                              }\n                                                                          );\n\n                                                                          window.location.reload();\n                                                                      }}\n                                                                      className=\"fa fa-trash\"\n                                                                      aria-hidden=\"true\"\n                                                                  ></i>\n                                                              ) : null}\n                                                          </>\n                                                      </li>\n                                                  );\n                                              }\n                                          })\n                                        : null}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            <div className=\"login-box\">\n                                {checkIfAuth() ? (\n                                    <EditAccount\n                                        props={{\n                                            first_name,\n                                            setFirstName,\n                                            last_name,\n                                            setLastName,\n                                            password,\n                                            setPassword,\n                                            age,\n                                            setAge,\n                                            phone_number,\n                                            setPhoneNumber,\n                                        }}\n                                    />\n                                ) : (\n                                    <>\n                                        {!registerState ? (\n                                            <>\n                                                <h1>Log In</h1>\n                                                <h5\n                                                    style={{\n                                                        textAlign: \"center\",\n                                                        color: \"blue\",\n                                                    }}\n                                                >\n                                                    <span\n                                                        className=\"noselect\"\n                                                        onClick={() => {\n                                                            setRegister(true);\n                                                        }}\n                                                    >\n                                                        Sign Up\n                                                    </span>\n                                                </h5>\n                                                <div className=\"center\">\n                                                    <div className=\"container\">\n                                                        <UserDataInputs\n                                                            props={{\n                                                                first_name,\n                                                                setFirstName,\n                                                                last_name,\n                                                                setLastName,\n                                                                password,\n                                                                setPassword,\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"center\">\n                                                    <button\n                                                        className=\"login-btn\"\n                                                        onClick={() => login()}\n                                                    >\n                                                        LOG IN\n                                                    </button>\n                                                </div>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <Register\n                                                    props={{\n                                                        first_name,\n                                                        setFirstName,\n                                                        last_name,\n                                                        setLastName,\n                                                        password,\n                                                        setPassword,\n                                                        age,\n                                                        setAge,\n                                                        phone_number,\n                                                        setPhoneNumber,\n                                                        setRegister,\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport const UserDataInputs = ({ props }: any) => {\n    let {\n        first_name,\n        setFirstName,\n        last_name,\n        setLastName,\n        password,\n        setPassword,\n    } = props;\n\n    return (\n        <>\n            <div\n                className=\"input-box\"\n                style={{\n                    marginLeft: \"5%\",\n                    width: \"40%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <input\n                    id=\"fn-input\"\n                    onClick={() => {\n                        try {\n                            document.getElementById(\n                                \"fn-label\"\n                            )!.style.transform = \"translateY(0)\";\n                        } catch {}\n                    }}\n                    onFocus={() => {\n                        try {\n                            document.getElementById(\n                                \"fn-label\"\n                            )!.style.transform = \"translateY(0)\";\n                        } catch {}\n                    }}\n                    onBlur={() => {\n                        if (!first_name) {\n                            document.getElementById(\n                                \"fn-label\"\n                            )!.style.transform = \"\";\n                        }\n                    }}\n                    value={first_name}\n                    onChange={e => setFirstName(e.target.value)}\n                />\n                <label id=\"fn-label\">First Name</label>\n            </div>\n\n            <div\n                className=\"input-box\"\n                style={{\n                    marginLeft: \"5%\",\n                    width: \"40%\",\n                    display: \"inline-block\",\n                }}\n            >\n                <input\n                    id=\"ln-input\"\n                    onClick={() => {\n                        try {\n                            document.getElementById(\n                                \"ln-label\"\n                            )!.style.transform = \"translateY(0)\";\n                        } catch {}\n                    }}\n                    onFocus={() => {\n                        try {\n                            document.getElementById(\n                                \"ln-label\"\n                            )!.style.transform = \"translateY(0)\";\n                        } catch {}\n                    }}\n                    onBlur={() => {\n                        if (!last_name) {\n                            document.getElementById(\n                                \"ln-label\"\n                            )!.style.transform = \"\";\n                        }\n                    }}\n                    value={last_name}\n                    onChange={e => setLastName(e.target.value)}\n                />\n                <label id=\"ln-label\">Last Name</label>\n            </div>\n\n            <div\n                className=\"input-box\"\n                style={{\n                    width: \"85%\",\n                    marginLeft: \"5%\",\n                }}\n            >\n                <input\n                    id=\"p-input\"\n                    onClick={() => {\n                        try {\n                            document.getElementById(\n                                \"p-label\"\n                            )!.style.transform = \"translateY(0)\";\n                        } catch {}\n                    }}\n                    onFocus={() => {\n                        try {\n                            document.getElementById(\n                                \"p-label\"\n                            )!.style.transform = \"translateY(0)\";\n                        } catch {}\n                    }}\n                    onBlur={() => {\n                        if (!password) {\n                            document.getElementById(\n                                \"p-label\"\n                            )!.style.transform = \"\";\n                        }\n                    }}\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    type=\"password\"\n                />\n                <label id=\"p-label\">Password</label>\n            </div>\n        </>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\nimport { App } from \"./App\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink, Observable } from \"apollo-link\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport jwtDecode from \"jwt-decode\";\n\nconst cache = new InMemoryCache({});\nvar URI = \"\";\n\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    if (accessToken) {\n                        operation.setContext({\n                            headers: {\n                                authorization: `bearer ${accessToken}`,\n                            },\n                        });\n                    }\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        })\n);\n\nif (process.env.NODE_ENV === \"production\") {\n    URI = \"https://inspected-job-app-server.herokuapp.com\";\n} else {\n    URI = \"http://localhost:4000\";\n}\n\nconst client = new ApolloClient({\n    link: ApolloLink.from([\n        new TokenRefreshLink({\n            accessTokenField: \"accessToken\",\n            isTokenValidOrUndefined: () => {\n                const token = getAccessToken();\n\n                if (!token) {\n                    return true;\n                }\n\n                try {\n                    const { exp } = jwtDecode(token);\n                    if (Date.now() >= exp * 1000) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                } catch {\n                    return false;\n                }\n            },\n            fetchAccessToken: () => {\n                return fetch(`${URI}/refresh_token`, {\n                    method: \"POST\",\n                    credentials: \"include\",\n                });\n            },\n            handleFetch: accessToken => {\n                setAccessToken(accessToken);\n            },\n            handleError: err => {\n                console.warn(\"Your refresh token is invalid. Try to relogin\");\n                console.error(err);\n            },\n        }),\n        onError(({ graphQLErrors, networkError }) => {\n            console.log(graphQLErrors);\n            console.log(networkError);\n        }),\n        requestLink,\n        new HttpLink({\n            uri: `${URI}/graphql`,\n            credentials: \"include\",\n        }),\n    ]),\n    cache,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n","import React, { useState, useEffect } from \"react\";\nimport { setAccessToken } from \"./accessToken\";\nimport { Home } from \"./pages/Home\";\nimport \"./css/main.css\";\n\ninterface Props {}\n\nexport const App: React.FC<Props> = () => {\n    const [loading, setLoading] = useState(true);\n\n    var URI = \"\";\n    if (process.env.NODE_ENV === \"production\") {\n        URI = \"https://inspected-job-app-server.herokuapp.com\";\n    } else {\n        URI = \"http://localhost:4000\";\n    }\n\n    useEffect(() => {\n        let refreshToken = localStorage.getItem(\"urd\") || \"\";\n        fetch(`${URI}/refresh_token`, {\n            method: \"POST\",\n            credentials: \"include\",\n            headers: {\n                refreshToken: refreshToken || \"\",\n            },\n        }).then(async res => {\n            const { accessToken, refreshToken } = await res.json();\n            setAccessToken(accessToken);\n            localStorage.setItem(\"urd\", refreshToken || \"\");\n            setLoading(false);\n        });\n    });\n\n    if (loading) {\n        return (\n            <div className=\"pageWrapper\" style={{ backgroundColor: \"#333\" }}>\n                <div className=\"cssload-dots\">\n                    <div className=\"cssload-dot\"></div>\n                    <div className=\"cssload-dot\"></div>\n                    <div className=\"cssload-dot\"></div>\n                    <div className=\"cssload-dot\"></div>\n                    <div className=\"cssload-dot\"></div>\n                </div>\n\n                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <defs>\n                        <filter id=\"goo\">\n                            <feGaussianBlur\n                                in=\"SourceGraphic\"\n                                result=\"blur\"\n                                stdDeviation=\"12\"\n                            ></feGaussianBlur>\n                            <feColorMatrix\n                                in=\"blur\"\n                                mode=\"matrix\"\n                                values=\"1 0 0 0 0\t0 1 0 0 0\t0 0 1 0 0\t0 0 0 18 -7\"\n                                result=\"goo\"\n                            ></feColorMatrix>\n                        </filter>\n                    </defs>\n                </svg>\n            </div>\n        );\n    }\n\n    return <Home />;\n};\n"],"sourceRoot":""}